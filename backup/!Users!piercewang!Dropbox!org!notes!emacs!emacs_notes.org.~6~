#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: emacs_notes
#+DATE: <2018-11-01 Thu>
#+AUTHOR: Pierce Wang
#+EMAIL: piercewang@Pierces-MacBook-Air.local
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.1 (Org mode 9.1.9)

* Emacs/Evilmode
** Calendar Functions
| Key | Function |
|-----+----------|
| i d | diary    |
*** Calendar Navigation
|-------------+------------------------|
| Shift-RIGHT | Go forward a day       |
| Shift-LEFT  | Go backward a day      |
| Shift-UP    | Go to previous week    |
| Shift-DOWN  | Go to next week        |
| <           | scroll back 1 month    |
| >           | scroll forward 1 month |
| .           | Go to today            |
|-------------+------------------------|
** Custom Commands
| Keybind | Command                                       |
|---------+-----------------------------------------------|
| C-c p   | find-file Gdrive/Semester 1                   |
| C-c o   | find-file ~/Dropbox/org/school.org            |
| C-c i   | find-file ~/Dropbox/org/todo.org              |
| C-c v   | find-file ~/Dropbox/org/violin.org            |
| C-c m   | find-file ~/Dropbox/org/notes/emacs_notes.org |
** Themes
   - THEMES (smart-mode-line, aka sml)
     - installing melpa, check init.el
       - Must install melpa between the created (require 'package...etc)
     - Install packages by "M-x list-packages RET"
     - smart-mode-line for themes, smart-mode-line-powerline-theme for powerline themes
       - do "M-x sml/customize" to go to customization screen
** Keybinds
| Keybind | Vim Alternative | Function                 | Description                |
|---------+-----------------+--------------------------+----------------------------|
| C-x C-s | :w              | save-buffer              | Save current buffer        |
| C-x C-b |                 | switch-to-buffer         | Switch buffer              |
| C-x k   |                 | kill-buffer              | Kill current buffer        |
| C-x o   |                 | other-window             | Cycle through buffers      |
| C-x 0   |                 | delete-window            | Delete window              |
| C-x 5 2 |                 | make-frame-command       | Makes new *window*         |
| C-x u   |                 | undo-tree-visualize      | Visualize undo tree        |
| C-_     |                 | undo-tree-undo           | Undo                       |
| M-_     |                 | undo-tree-redo           | Redo                       |
| *N/A*   | :q              | kill-buffer-close-window |                            |
| M-%     |                 | query-replace            | Replace text               |
| C-M-%   |                 | query-replace-regexp     | Replace using regexp       |
| C-x 4 0 |                 | kill-buffer-and-window   | kill buffer and window     |
| C-u     |                 | universal-argument       | universal argument         |
| C-x C-e |                 | eval-last-sexp           | Run code in scratch buffer |
|---------+-----------------+--------------------------+----------------------------|
** Running emacs as a daemon
   - to start emacs server, either run =M-x server-start= or from terminal =emacs --daemon=
   - connect to server using =emacsclient -c <optional file arg>=
   - stop server by doing '=M-0 M-x server-mode=', '=M-x server-force-delete=', or '=emacsclient -e "(kill-emacs)"='
** Input Method
*** General Commands
| Keys                        | Function                   |
|-----------------------------+----------------------------|
| C-h C-\                     | Show Current Input Method  |
| C-x RET C-\                 | Select input method        |
| C-\                         | toggle input method        |
| M-x deactivate-input-method | deactivate input method    |
| C-x RET C-\ TeX RET         | Choose tex as input method |
** Macros
*** Prompting for input
    - =\C-xQ= :: (See function init.el)
*** Custom Macros
    - OHSFigureSave
      - Type caption and file name
      - Move and rename most recently taken screenshot to week # (prompted) folder and rename to given file name (prompted).
    - importChineseFlashcards
      - Must export chinese flashcards with two '=' signs, two "\n\n" new line characters
      - Convert copy pasted information to flashcards for orgdrill
** Local Variables
   Add this to the beginning of a file to change the font of that specific file.
#+BEGIN_SRC 
;; Local Variables:
;; eval: (face-remap-add-relative 'default :family "Arial")
;; End:
#+END_SRC
* Orgmode
** General
    - To-do's can be configured like so:
      =#+TODO: TODO IN-PROGRESS WAITING DONE=
    - or in the .emacs config using setq and =org-todo-keywords=
    - Clocking in (org) :: [[https://orgmode.org/manual/Clocking-commands.html#Clocking-commands][Org Manual]]
    - Display Inline Images
      - M-x org-display-inline-images :: display images in "[[]]"
      - #+STARTUP: inlineimages :: Add to beginning of file (C-c C-c to refresh)
      - (setq org-startup-with-inline-images t) :: line to add to .emacs if I need
    - C-c C-x C-c :: Column View (Show everything in a table)
    - Columns: =#+COLUMNS: %COURSEID %MIDTERM %DATES %DURATION=
** Timers :: [[[https://www.gnu.org/software/emacs/manual/html_node/org/Timers.html][Emacs Manual]]]
| Keybind   | Function                    | Description                                    |
|-----------+-----------------------------+------------------------------------------------|
| C-c C-x 0 | org-timer-start             | Start or reset the relative timer              |
| C-c C-x ; | org-timer-set-timer         | Start a countdown timer                        |
| C-c C-x . | org-timer                   | Insert the value of the current                |
|           |                             | relative or countdown timer into the buffer.   |
| C-c C-x - | org-timer-item              | Insert a description list item with the value  |
|           |                             | of the current relative or countdown timer.    |
| M-<RET>   | org-insert-heading          | While timer running: use M-<RET> to insert new |
|           |                             | timer items.                                   |
| C-c C-x , | org-timer-pause-or-continue | Pause or continue current running timer        |
| C-c C-x _ | org-timer-stop              | Stop the timer. Completely removes timer.      |
To add a function to org-timer-done-hook:
#+BEGIN_SRC elisp
(defun my-org-timer-hook ()
  (message "My timer done"))
(add-hook 'org-timer-done-hook 'my-org-timer-hook)
#+END_SRC
** LaTeX
- C-c C-x C-l :: Convert selected (based on cursor position) latex formatted code to png
| Keybind          | Function       | Description |
|------------------+----------------+-------------|
| M-x cd-d TAB RET | cdlatex-dollar | Insert $$   |
|                  |                |             |
** Converting Onenote Documents
*** General Steps
    1. Copy text into orgmode
    2. =s/	•/   -/g=
    3. =s/		○/     -/g=
    4. =s/			§/       -/g=
    5. =s/				□/         -/g=
    6. =s/^\([a-zA-Z]\)/*** \1/g=
    7. =s/ - \([a-zA-Z0-9-+=]*\) - / - *\1* - /g=
** Templating System
| Tempalte | Function                              |
|----------+---------------------------------------|
| s        | #+BEGIN_SRC ... #+END_SRC             |
| e        | #+BEGIN_EXAMPLE ... #+END_EXAMPLE     |
| q        | #+BEGIN_QUOTE ... #+END_QUOTE         |
| v        | #+BEGIN_VERSE ... #+END_VERSE         |
| c        | #+BEGIN_CENTER ... #+END_CENTER       |
| C        | #+BEGIN_COMMENT ... #+END_COMMENT     |
| l        | #+BEGIN_EXPORT latex ... #+END_EXPORT |
| L        | #+LATEX:                              |
| h        | #+BEGIN_EXPORT html ... #+END_EXPORT  |
| H        | #+HTML:                               |
| a        | #+BEGIN_EXPORT ascii ... #+END_EXPORT |
| A        | #+ASCII:                              |
| i        | #+INDEX: line                         |
| I        | #+INCLUDE: line                       |
Call on templates like so: =<sTAB=
[[https://orgmode.org/org.html#Easy-templates][Easy Templates - Org 
** Tidbits
   - with scheduled tasks, -3d means 3 day warning period
   - Give prefix to C-c C-s|d to remove scheduled/deadline date
* VIM
** Normal Mode
*** Some Keybinds
| Key(s) | Function                         |
|--------+----------------------------------|
| V      | select whole line                |
| V y p  | quickly duplicate line           |
| \/     | find                             |
| n      | next entry (find)                |
| N      | previous entry (find)            |
| #gg    | Go to line #                     |
| C-o    | Switch to normal for one command |
*** Others
   - Find and replace in visual selection:
     1. Visually select using 'V'
     2. press ":" which will automatically input '<,'> which refers to the selection
     3. then regular s/foo/bar/g to replace all occurances of foo with bar
   - Macros
**** Marks
| Command     | Description                                                     |
|-------------+-----------------------------------------------------------------|
| =ma=        | set mark *a* at current cursor location                         |
| ='a=        | jump to line of mark *a* (first non-blank character in line)    |
| =`a=        | jump to position (line and column) of mark *a*                  |
| =d'a=       | delete from current line to line of mark *a*                    |
| =d`a=       | delete from current cursor position to position of mark *a*     |
| =c'a=       | change text from current line to line of mark *a*               |
| =y`a=       | yank text to unnamed buffer from cursor to position of mark *a* |
| =:marks=    | list all the current marks                                      |
| =:marks aB= | list marks *a*, *B*                                             |

**** Defined Macros
| Key | General function     |
| n   | input file for notes |
|     |                      |
** Commands
   - :%s/foo/bar/g :: replace all occurances of foo with bar in file
* GPG Encryption
** Steps for both sides of GPG encryption/decryption
   [X] => Reciever \\
   [ ] => Sender \\
   1. [X] =gpg --full-generate-key= generate a key
   2. [X] =gpg -a -o /path/to/file.asc --export [name]= Export public key to file.asc (must be .asc)
   3. [X] Send public key to whoever is to encode the message to send to you
   4. [ ] =gpg --import /path/to/senders/public/key.asc= Import sender's public key
   5. [ ] =gpg --list-keys= Show list of keys in ~/.gnupg
   6. [ ] =gpg -r [uid of recipient, email] -e /path/to/file.txt= Encrypt file using recipient's public key
   7. [ ] Send encypted file to reciever
   8. [X] Download encrypted file
   9. [X] =gpg -d file.txt.gpg= Decrypt file (will automatically choose the right private key)
** GPG Encryption in Emacs
   - Install pinentry-mac using brew
#+BEGIN_SRC bash
brew install pinentry-mac
echo "pinentry-program /usr/local/bin/pinentry-mac" >> ~/.gnupg/gpg-agent.conf
killall gpg-agent
#+END_SRC
* Git
** Initializing a repo from a folder
   1. =cd <localdir>= \\
   2. =git init= \\
   3. =git add .= \\
   4. =git commit -m 'message'= \\
   5. =git remote add origin <url>= \\
   6. =git push -u origin master= \\
NOTE: May need to run the following command: =git pull origin branchname --allow-unrelated-histories=
** Magit
*** How to do the normal stuff
    1. "C-x g" to open 'magit-status
    2. S == Stage all changes
       * =git add .=
    3. c c == Commit + message
       * =git commit -m "message"=
    4. C-c C-c == Finish commit message
    5. P u == Push to origin master
       * =git push=
** Removing a file from all of git commit history
   - git-forget-blob
* Morse Code
* General
** git commands not working after Mac OS update
   - run to install xcode command line tools
     - =xcode-select --install=
   - If that doesn't work ^ install command line tools for macOS 10.xx (or later)
     - [[https://developer.apple.com/downloads][Apple Developer Downloads]]


